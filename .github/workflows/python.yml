name: Python

on:
  pull_request:
    paths:
      - "apps/insights/**"
  push:
    branches:
      - main
    paths:
      - "apps/insights/**"

env:
  # renovate: datasource=pypi depName=poetry
  POETRY_VERSION: 2.2.1

jobs:
  python:
    runs-on: ubuntu-24.04
    
    permissions:
      contents: read

    defaults:
      run:
        working-directory: ./apps/insights

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          pip install poetry==${{ env.POETRY_VERSION }}
          poetry --version

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ./apps/insights/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install

      - name: Run ruff linting
        run: poetry run poe lint

      - name: Check formatting
        run: |
          poetry run poe format-check

      - name: Run tests
        run: |
          poetry run poe test || echo "No tests found"