name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

env:
  # renovate: datasource=npm depName=corepack
  COREPACK_VERSION: 0.31.0
  # renovate: datasource=node-version depName=node
  NODE_VERSION: 22.13.1
  # renovate: datasource=github-releases depName=astral-sh/uv
  UV_VERSION: 0.9.5

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-24.04

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: "Set up uv"
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: "Enable Corepack for pnpm"
        run: |
          npm install -g corepack@${COREPACK_VERSION}
          corepack enable

      - uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: "Install project dependencies"
        run: "pnpm install"

      - name: "Set environment variables for Supabase and Upstash"
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=https://fake.supabase.test" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=fake-anon-key" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE_KEY=fake-service-role-key" >> $GITHUB_ENV

          echo "UPSTASH_REDIS_REST_TOKEN=fake-upstash-token" >> $GITHUB_ENV
          echo "UPSTASH_REDIS_REST_URL=https://fake.upstash.test" >> $GITHUB_ENV

      - name: "Set MSW environment variable"
        run: "echo 'ENABLE_MSW=true' >> $GITHUB_ENV"

      - name: "Create public directory for admin app"
        run: "mkdir -p apps/admin/public"

      - name: "Initialize MSW service workers for apps"
        run: "pnpm --filter './apps/*' run msw:init --save"

      - name: "Install Python dependencies for insights app"
        run: |
          cd apps/insights
          uv sync --extra dev
